# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# This Makefile is designed to be used by the rosbag_fix_all.py script.

# The paths to scripts and configuration files should work as long as
# the relevant ROS packages (ff_msgs, bag_processing, optionally
# isaac_msgs) are installed and the necessary devel/setup.bash files
# have been sourced.

# As a fallback, you can override the relevant variables (REWRITE_TYPES,
# FF_MSGS_BMR, ISAAC_MSGS_BMR) in your shell environment before running
# rosbag_fix_all.py.

ROS_VERSION=$(shell rosversion -d)

# Find script executables
ifeq (,${REWRITE_TYPES})
  REWRITE_TYPES := $(shell catkin_find --first-only bag_processing scripts/rosbag_rewrite_types.py || echo FAIL)
  ifneq (,$(findstring FAIL,$(REWRITE_TYPES)))
    $(error could not find path to rosbag_rewrite_types.py)
  endif
endif
ifeq (,${ROSBAG_VERIFY})
  ROSBAG_VERIFY := $(shell catkin_find --first-only bag_processing scripts/rosbag_verify.py || echo FAIL)
  ifneq (,$(findstring FAIL,$(ROSBAG_VERIFY)))
    $(error could not find path to rosbag_verify.py)
  endif
endif
ifeq (,${ROSBAG_DEBAYER})
  ROSBAG_DEBAYER := $(shell catkin_find --first-only bag_processing scripts/rosbag_debayer.py || echo FAIL)
  ifneq (,$(findstring FAIL,$(ROSBAG_DEBAYER)))
    $(error could not find path to rosbag_debayer.py)
  endif
endif
ifeq (,${ROSBAG_SPLIT_DEPTH})
  ROSBAG_SPLIT_DEPTH := $(shell catkin_find --first-only pico_driver scripts/pico_split_extended.py || echo FAIL)
  ifneq (,$(findstring FAIL,$(ROSBAG_SPLIT_DEPTH)))
    $(error could not find path to pico_split_extended.py)
  endif
endif
ifeq (,${ROSBAG_FILTER})
  ROSBAG_FILTER := $(shell catkin_find --first-only bag_processing scripts/rosbag_topic_filter.py || echo FAIL)
  ifneq (,$(findstring FAIL,$(ROSBAG_FILTER)))
    $(error could not find path to rosbag_topic_filter.py)
  endif
endif

# Find rosbag migration definitions
ifeq (,${FF_MSGS_BMR})
  FF_MSGS_BMR := $(shell catkin_find --first-only ff_msgs bmr || echo FAIL)
  ifneq (,$(findstring FAIL,$(FF_MSGS_BMR)))
    $(error could not find path to ff_msgs package bmr folder)
  endif
endif
BMR = $(sort $(wildcard ${FF_MSGS_BMR}/*.bmr) $(wildcard ${FF_MSGS_BMR}/${ROS_VERSION}/*.bmr))
REWRITE_TYPES_ARGS += -r ${FF_MSGS_BMR}/rosbag_rewrite_types_rules.json

ifeq (,${ISAAC_MSGS_BMR})
  ISAAC_MSGS_BMR = $(shell catkin_find --first-only isaac_msgs bmr 2> /dev/null)
endif
ifneq (,${ISAAC_MSGS_BMR})
  # If isaac_msgs is available, apply extra rules. Shouldn't hurt non-ISAAC bags.
  BMR += $(sort $(wildcard ${ISAAC_MSGS_BMR}/*.bmr))
  REWRITE_TYPES_ARGS += -r ${ISAAC_MSGS_BMR}/rosbag_rewrite_types_rules.json
endif

# Fix rosjava scicam bug
%.rewrite_types.bag: %.bag
	${REWRITE_TYPES} -v ${REWRITE_TYPES_ARGS} $< -o $@

# Fix old message definitions
%.migrate_old.bag: %.rewrite_types.bag
	rosbag fix $< $@ ${BMR}
	rm $<  # explicitly delete right away to save disk space

migrate_check1-%: %.migrate_old.bag
	rosbag check $<  # test: post-migration consistency

migrate_check2-%: %.migrate_old.bag
	# compare with original bag to make sure data is there
	${ROSBAG_VERIFY} ${ROSBAG_VERIFY_ARGS} $< $(<:.migrate_old.bag=.bag)

# Debayer the nav cam
%.debayer.bag: %.migrate_old.bag migrate_check1-% migrate_check2-%
	${ROSBAG_DEBAYER} ${ROSBAG_DEBAYER_ARGS} $< -o $@
	if [ -f $< ]; then rm $< ; fi  # explicitly delete right away to save disk space

# Decode the haz cam into point cloud + image
%.depth_split.bag: %.debayer.bag
	${ROSBAG_SPLIT_DEPTH} ${ROSBAG_SPLIT_DEPTH_ARGS} $< -o $@
	if [ -f $< ]; then rm $< ; fi  # explicitly delete right away to save disk space

# Filter the rosbag topics
%.fix_all.bag: %.depth_split.bag
ifeq (,${ROSBAG_FILTER_ARGS})
	mv $< $@  # skip no-op filtering
else
	${ROSBAG_FILTER} ${ROSBAG_FILTER_ARGS} -o $@ $< 
endif
	if [ -f $< ]; then rm $< ; fi  # explicitly delete right away to save disk space

.PRECIOUS: %.rewrite_types.bag %.migrate_old.bag %.debayer.bag %.depth_split.bag
